cmake_minimum_required(VERSION 3.15)

project(Thaumium CXX)

# Language specs
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_C_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

add_compile_options(-ggdb)

# Thaumium
add_library(ThaumiumDLL SHARED
        "dllmain.h"
        "dllmain.cpp"
        "framework.h"
        "util/memory.h"
        "util/memory.cpp"
        "util/hooks.h"
        "util/hooks.cpp"
        "modules/core.h"
        "modules/core.cpp"
        "modules/frontendoptions.h"
        "modules/frontendoptions.cpp"
        "modules/textchathandler.h"
        "modules/textchathandler.cpp"

        #NMS
        "nms/version.h"

        #GameComponents
        "nms/GameComponents/GcApplication.h"
        "nms/GameComponents/GcAtlasDownloadType.h"
        "nms/GameComponents/GcBooleanOption.h"
        "nms/GameComponents/GcBooleanOption.cpp"
        "nms/GameComponents/GcFrontendPageOptions.h"
        "nms/GameComponents/GcNetworkManager.h"
        "nms/GameComponents/GcNetworkMessageManager.h"
        "nms/GameComponents/GcNGuiElement.h"
        "nms/GameComponents/GcNGuiElement.cpp"
        "nms/GameComponents/GcNGuiElementData.h"
        "nms/GameComponents/GcNGuiLayer.h"
        "nms/GameComponents/GcNGuiLayer.cpp"
        "nms/GameComponents/GcNGuiLayerData.cpp"
        "nms/GameComponents/GcNGuiLayoutData.h"
        "nms/GameComponents/GcNGuiLayoutData.cpp"
        "nms/GameComponents/GcNGuiPreset.h"
        "nms/GameComponents/GcNGuiPresetText.h"
        "nms/GameComponents/GcNGuiPresetGraphic.h"
        "nms/GameComponents/GcNGuiSpacingData.h"
        "nms/GameComponents/GcNGuiSpacingData.cpp"
        "nms/GameComponents/GcNGuiText.h"
        "nms/GameComponents/GcNGuiText.cpp"
        "nms/GameComponents/GcNGuiTextData.h"
        "nms/GameComponents/GcNGuiTextData.cpp"
        "nms/GameComponents/GcOption.h"
        "nms/GameComponents/GcOptionsInteractionContext.h"
        "nms/GameComponents/GcOptionsInteractionContext.cpp"
        "nms/GameComponents/GcOptionsMenuState.h"
        "nms/GameComponents/GcTextChatInput.h"
        "nms/GameComponents/GcTextChatManager.h"
        "nms/GameComponents/GcPlayerControlInput.h"
        "nms/GameComponents/GcPlayerControlInput.cpp"
        "nms/GameComponents/GcUIOptionListElement.h"
        "nms/GameComponents/GcUIOptionListElement.cpp"
        "nms/GameComponents/GcFrigateFlybyType.h"
        "nms/GameComponents/GcFrigateFlybyType.cpp"
        "nms/GameComponents/GcURL.h"

        #ToolKit
        "nms/ToolKit/TkBBox2d.h"
        "nms/ToolKit/TkColour.h"
        "nms/ToolKit/TkCurveType.h"
        "nms/ToolKit/TkDynamicArray.h"
        "nms/ToolKit/TkFixedArray.h"
        "nms/ToolKit/TkFixedString.h"
        "nms/ToolKit/TkID.h"
        "nms/ToolKit/TkMemoryManager.h"
        "nms/ToolKit/TkNGuiAlignment.h"
        "nms/ToolKit/TkNGuiAlignment.cpp"
        "nms/ToolKit/TkNGuiDraggable.h"
        "nms/ToolKit/TkNGuiForcedStyle.h"
        "nms/ToolKit/TkNGuiGraphicStyle.h"
        "nms/ToolKit/TkNGuiGraphicStyle.cpp"
        "nms/ToolKit/TkNGuiGraphicStyleData.h"
        "nms/ToolKit/TkSTLAllocatorShim.h"
        "nms/ToolKit/TkVector2.h"
        "nms/ToolKit/TkVector4.h"
        "nms/ToolKit/TkNGuiTypeUndoable.h"
        "nms/ToolKit/TkNGuiUndoable.h"
        "nms/ToolKit/TkNGuiGraphicStyleData.cpp"
        "nms/ToolKit/TkLinearHashTable.h"
        "nms/ToolKit/TkHashedNGuiElement.h"
        "nms/ToolKit/TkClassPointer.h"
        #Misc
        "nms/Reality/FrigateFlybyType.h"
        "nms/Atlas/DownloadType.h"
        "nms/NGui/NGuiEditorIcons.h"
 "modules/nguimbinexport.h" "modules/nguimbinexport.cpp" "nms/ToolKit/TkMetaDataXML.h" "nms/ToolKit/TkLinearMemoryPool.h" "nms/ToolKit/TkMemoryPool.h" "nms/ToolKit/TkBitArray.h" "nms/ToolKit/TkBitArrayStorage.h" "modules/curlhook.cpp" "nms/ToolKit/TkStackVector.h" "nms/ToolKit/TkAlignedBlock.h" "nms/GameComponents/GcAtlasTransportWinHttp.h" "nms/Atlas/Http.h" "nms/GameComponents/GcPlayer.h" "nms/Havok/hknpShapeKeyMask.h" "nms/ToolKit/TkVector3.h")

target_link_libraries(ThaumiumDLL PRIVATE
        ${CMAKE_SOURCE_DIR}/lib/MinHook.x64.lib
)

target_include_directories(ThaumiumDLL PRIVATE
        ${CMAKE_SOURCE_DIR}/include
)

target_precompile_headers(ThaumiumDLL PRIVATE pch.h)

set_target_properties(ThaumiumDLL PROPERTIES
        OUTPUT_NAME Thaumium
)   

# Targets
add_subdirectory(proxy)